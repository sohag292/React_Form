{"version":3,"sources":["components/TextInput.js","components/Form.js","components/Main.js","App.js","reportWebVitals.js","index.js"],"names":["TextInput","props","className","htmlFor","name","label","error","onChange","value","id","type","placeholder","defaultProps","palceholder","Form","values","agreement","handleChange","handleAgreement","handleSubmit","errors","onSubmit","email","password","birthDate","gender","checked","disabled","initValues","Main","state","event","setState","target","preventDefault","validate","isValid","creatUser","reset","Object","keys","length","this","Component","App","users","user","Date","getTime","toString","style","width","margin","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a3c9c429.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from \"prop-types\";\r\nconst TextInput= props=>(\r\n    <div className=\"my-3\">\r\n        <label htmlFor={props.name}>{props.label}</label>\r\n        <input  \r\n        className={props.error ?'form-control is-invalid' : 'form-control'}\r\n        onChange={props.onChange} \r\n        value={props.value} \r\n        id={props.name}\r\n        type={props.type} \r\n        name={props.name}\r\n        placeholder={props.placeholder}/>\r\n        {props.error && <div className=\"invalid-feedback\">{props.error}</div>}\r\n    </div>\r\n\r\n);\r\nTextInput.propTypes={\r\n    name:PropTypes.string.isRequired,\r\n    label:PropTypes.string.isRequired,\r\n    type:PropTypes.string.isRequired,\r\n    errors:PropTypes.string,\r\n    onChange:PropTypes.func.isRequired\r\n\r\n}\r\nTextInput.defaultProps = {\r\n    type:\"text\",\r\n    label:\" \",\r\n    palceholder:''\r\n};\r\n\r\nexport default TextInput;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport TextInput from \"./TextInput\";\r\n\r\nconst Form = ({\r\n  values,\r\n  agreement,\r\n  handleChange,\r\n  handleAgreement,\r\n  handleSubmit,\r\n  errors,\r\n}) => (\r\n  <form onSubmit={handleSubmit}>\r\n    <TextInput\r\n      name=\"name\"\r\n      placeholder=\"Enter your Name\"\r\n      onChange={handleChange}\r\n      label=\"Name\"\r\n      value={values.name}\r\n      error={errors.name}\r\n    />\r\n\r\n    <TextInput\r\n      name=\"email\"\r\n      type=\"email\"\r\n      label=\"Email\"\r\n      placeholder=\"Enter your Gmail\"\r\n      value={values.email}\r\n      onChange={handleChange}\r\n      error={errors.email}\r\n    />\r\n\r\n    <TextInput\r\n      name=\"password\"\r\n      type=\"password\"\r\n      label=\"password\"\r\n      placeholder=\"******\"\r\n      value={values.password}\r\n      onChange={handleChange}\r\n      error={errors.password}\r\n    />\r\n    <TextInput\r\n      name=\"birthDate\"\r\n      type=\"date\"\r\n      label=\"BirthDate\"\r\n      value={values.birthDate}\r\n      onChange={handleChange}\r\n      error={errors.birthDate}\r\n    />\r\n\r\n    <div className=\"form-group \">\r\n      <label>\r\n        <input\r\n          className=\"mx-2\"\r\n          type=\"radio\"\r\n          name=\"gender\"\r\n          value=\"Male\"\r\n          onChange={handleChange}\r\n        />\r\n        Male\r\n        <input\r\n          className=\"mx-2\"\r\n          type=\"radio\"\r\n          name=\"gender\"\r\n          value=\"Female\"\r\n          onChange={handleChange}\r\n        />\r\n        Female\r\n        <input\r\n          className=\"mx-2\"\r\n          type=\"radio\"\r\n          name=\"gender\"\r\n          value=\"Others\"\r\n          onChange={handleChange}\r\n        />\r\n        Others\r\n      </label>\r\n      {errors.gender && (\r\n        <div className=\"invalid-feedback\"> {errors.gender}</div>\r\n      )}\r\n    </div>\r\n\r\n    <div className=\"form-group\">\r\n      <input\r\n        type=\"checkbox\"\r\n        name=\"agreement\"\r\n        checked={agreement}\r\n        onChange={handleAgreement}\r\n      />{\" \"}\r\n      I am agree\r\n    </div>\r\n\r\n    <button className=\"btn btn-primary\" type=\"submit\" disabled={!agreement}>\r\n      Create User\r\n    </button>\r\n  </form>\r\n);\r\n\r\nForm.propTypes = {\r\n  values: PropTypes.object.isRequired,\r\n  handleChange: PropTypes.func.isRequired,\r\n  handleAgreement: PropTypes.func.isRequired,\r\n  agreement: PropTypes.bool.isRequired,\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Form;\r\n","import React, { Component } from 'react'\r\n// import PropTypes from \"prop-types\";\r\nimport Form from './Form'\r\nconst initValues={\r\n            name: '',\r\n            email: '',\r\n            password:'',\r\n            birthDate:'',\r\n            gender: '',\r\n};\r\nexport default class Main extends Component {\r\n    state={\r\n        values:initValues,\r\n        agreement: false,\r\n        errors:{}\r\n    }\r\n    handleChange=event=>{\r\n        this.setState({\r\n            values:{\r\n                ...this.state.values,\r\n                [event.target.name]:event.target.value\r\n            }\r\n        })\r\n    }\r\n    handleAgreement=event=>{\r\n        this.setState({\r\n            agreement:event.target.checked\r\n        })\r\n    }\r\n\r\n    handleSubmit=event=>{\r\n        event.preventDefault()\r\n         const {isValid,errors}=this.validate()\r\n            if(isValid){\r\n           this.props.creatUser(this.state.values)\r\n\r\n            event.target.reset()\r\n        this.setState({\r\n            values:initValues,agreement:false})\r\n         }else{\r\n             this.setState({errors})\r\n             \r\n         }\r\n    }\r\n    validate=()=>{\r\n        const errors={}\r\n        const{values:{name,email,password,gender,birthDate}}=this.state\r\n        if(!name){\r\n            errors.name='please provide your Name'\r\n        }\r\n        if(!email){\r\n            errors.email='please provide your Email'\r\n        }\r\n        if(!password){\r\n            errors.password='please provide your password'\r\n        }\r\n\r\n        if(!birthDate){\r\n            errors.birthDate='please provide your birthDate'\r\n        }\r\n        if(!gender){\r\n            errors.gender='please select your gender'\r\n        }\r\n        return{\r\n            errors,\r\n            isValid: Object.keys(errors).length===0\r\n        };\r\n    };\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Signup Form</h1>\r\n                <Form\r\n                        values={this.state.values}\r\n                        agreement={this.state.agreement}\r\n                        handleChange={this.handleChange}\r\n                        errors={this.state.errors}\r\n                        handleSubmit={this.handleSubmit}\r\n                        handleAgreement={this.handleAgreement}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n   \r\n}\r\n// Main.propTypes={\r\n//     createUser:PropTypes.func.isRequired\r\n// }","import React, { Component } from \"react\";\nimport Main from \"./components/Main\";\n\nexport default class App extends Component {\n  state = {\n    users: [],\n  };\n\n  // state={\n  //   name: '',\n  //   country: '',\n  //   bio: ' ',\n  //   brithDay:'',\n  //   gender: '',\n  //   agree:false,\n  //   skills:[]\n  // }\n\n  // handleChange=event=>{\n  //   this.setState({\n  //     [event.target.name]: event.target.value\n  //   })\n  // }\n  // handleChackbox=event=>{\n  //   this.setState({\n  //     agree: event.target.checked\n  //   })\n  // }\n  // handleSkillChange=event=>{\n  //   if(event.target.checked){\n  //     this.setState({\n  //       skills: [...this.state.skills, event.target.value]\n  //     })\n  //   }else{\n  //     const skills=this.state.skills.filter(skill=>skill !== event.target.value)\n  //     this.setState({skills})\n  //   }\n  // };\n  creatUser = (user) => {\n    user.id = new Date().getTime().toString();\n    this.setState({\n      users: [...this.state.users, user],\n    });\n  };\n\n  render() {\n    // const {name, country, bio, brithDay, agree, skills}=this.state\n    return (\n      <div style={{ width: \"400px\", margin: \"auto\" }}>\n        {/* <input className=\"form-control my-2\" value={name}  type=\"text\" name=\"name\" onChange={this.handleChange} placeholder=\"sn sohag\"/>\n        <select className=\"form-control my-2\" value={country} onChange={this.handleChange} name=\"country\">\n          <option value=\"Bangladesh\"> Bangladesh </option>\n          <option value=\"India\"> India </option>\n          <option value=\"srilanka\">srilanka  </option>\n          <option value=\"Pakistan\">Pakistan  </option>\n          <option value=\"China\"> China </option>\n        </select>\n        <textarea onChange={this.handleChange} value={bio} className=\"form-control  my-2\" name=\"bio\" placeholder=\"Tell me About Yourself\">\n\n        </textarea>\n        \n        <input className=\"form-control  my-2\" value={brithDay}  onChange={this.handleChange}  type=\"date\" name=\"birthday\"/>\n        <div>\n          <input type=\"radio\" name=\"gender\" value=\"Male\" onChange={this.handleChange}/> Male\n          <input type=\"radio\" name=\"gender\" value=\"Female\" onChange={this.handleChange}/> Female\n          <input type=\"radio\" name=\"gender\" value=\"Others\" onChange={this.handleChange}/> Others\n        </div>\n        <div>\n          skills:<br/>\n          <input type=\"checkbox\" name=\"skills\" value=\"java\" checked={skills.includes(\"java\")} onChange={this.handleSkillChange} /> java\n          <input type=\"checkbox\" name=\"skills\" value=\"javascript\" checked={skills.includes(\"javascript\")} onChange={this.handleSkillChange} /> javascript\n          <input type=\"checkbox\" name=\"skills\" value=\"python\" checked={skills.includes(\"python\")} onChange={this.handleSkillChange} /> python\n          <input type=\"checkbox\" name=\"skills\" value=\"HTML\" checked={skills.includes(\"HTML\")} onChange={this.handleSkillChange} /> HTML\n\n        </div>\n\n        <div>\n          <input type=\"checkbox\" name=\"agree\" checked={agree} onChange={this.handleChackbox}/>\n          This is a agree box\n        </div>\n\n        <button className=\"btn btn-primary\"  onClick={()=>console.log(this.state)}>Click me</button> */}\n        <Main creatUser={this.creatUser}></Main>\n\n        <div>\n          <h3 className=\"my-5\">All Registered Users :</h3>\n          <ul className=\"list-group my-5\">\n            {this.state.users.map((user) => (\n              <li key={user.id} className=\"list-group-item\">\n                {user.name} ... {user.email} ... {user.password}\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}